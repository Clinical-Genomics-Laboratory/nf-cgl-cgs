/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    withName: 'DRAGEN_ALIGN' {
        ext.batch_name = params.batch_name ?: new java.util.Date().format('yyyyddMM') + "_CGS"
        publishDir = [
            path: { "${params.outdir}/${task.ext.batch_name}/${meta.id}/" },
            mode: params.publish_dir_mode,
            saveAs: {
                filename ->
                    filename.contains(".bw")                                                              ? filename :
                    filename.contains(".bam")                                                             ? filename :
                    filename.contains(".bai")                                                             ? filename :
                    filename.contains(".gff3")                                                            ? filename :
                    filename.contains(".targeted.json")                                                   ? filename :
                    filename.contains(".cnv_sv.vcf.gz")                                                   ? filename :
                    filename.contains(".repeats.vcf.gz")                                                  ? filename :
                    filename.contains(".roh_metrics.csv")                                                 ? filename :
                    filename.contains(".wgs_coverage_metrics.csv")                                        ? filename :
                    filename.contains(".cnv.excluded_intervals.bed.gz")                                   ? filename :
                    filename.contains(".ploidy_estimation_metrics.csv")                                   ? filename :
                    (!params.joint_genotype_sv && filename.contains(".sv.vcf.gz"))                        ? filename :
                    (!params.joint_genotype_cnv && filename.contains(".cnv.vcf.gz"))                      ? filename :
                    (!params.joint_genotype_small_variants && filename.contains(".hard-filtered.vcf.gz")) ? filename : null
                }
        ]
    }

    withName: 'DRAGEN_JOINT_CNV' {
        ext.prefix = [ 'id': params.batch_name ?: new java.util.Date().format('yyyyMMdd') + "_CGS" ]
    }

    withName: 'DRAGEN_JOINT_SMALL_VARIANTS' {
        ext.prefix = [ 'id': params.batch_name ?: new java.util.Date().format('yyyyMMdd') + "_CGS" ]
    }

    withName: 'DRAGEN_JOINT_SV' {
        ext.prefix = [ 'id': params.batch_name ?: new java.util.Date().format('yyyyMMdd') + "_CGS" ]
    }

    withName: 'BCFTOOLS_SPLIT_VCF' {
        publishDir = [
            path: { "${params.outdir}/${meta.batch}/${meta.id}/" },
            mode: params.publish_dir_mode,
            pattern: "*.vcf.gz"
        ]
    }

}
